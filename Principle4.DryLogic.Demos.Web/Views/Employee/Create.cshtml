@model Principle4.DryLogic.Demos.Web.Models.EmployeeViewModel
@using Principle4.DryLogic

@{
  ViewBag.Title = "Create Employee";
}

<h2>Create Employee</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true)


    <!--This sample requires the experimental BOVModelMetadataProvider and BOVModelBinder (assigned in Global.asax)-->
    @Html.EditorFor(model => model.MyEmployee.FirstName)
    @Html.EditorFor(model => model.MyEmployee.MiddleName)
    @Html.EditorFor(model => model.MyEmployee.LastName)
    @Html.EditorFor(model => model.MyEmployee.HireDate)
    @Html.EditorFor(model => model.MyEmployee.TerminationDate)
    @Html.EditorFor(model => model.MyEmployee.BirthDate)
    @Html.EditorFor(model => model.MyEmployee.IsPresident)
    @Html.TextBoxFor(model => model.MyEmployee.Score)

    @* I know this is weird, but the model state reload for a drop down list is kinda dumb...it changes depending on where the options exist:
        https://stackoverflow.com/questions/37213368/metadata-vs-viewdata-in-htmlhelper

        and for more problems on drop down list:
        https://stackoverflow.com/questions/2278056/dropdownlistfor-not-selecting-value
    *@
    @{ ViewData[Html.NameFor(model => model.MyEmployee.Score).ToString()] = Model.ScoreOptions;}
    @Html.DropDownListFor(
                  model => model.MyEmployee.Score, null, new object());
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
